{"name":"Artifactory","tagline":"","body":"# Artifactory\r\n\r\nRun [Artifactory](http://www.jfrog.com/home/v_artifactory_opensource_overview) inside a Docker container.\r\nThis image is based on the following image:\r\nLink: [mattgruter/artifactory](https://registry.hub.docker.com/u/mattgruter/artifactory/)\r\n\r\n(this image is using the open source version of artifactory and storers data in the embedded derby database)\r\n\r\n## Volumes\r\nArtifactories `data`, `logs` and `backup` directories are exported as volumes:\r\n\r\n    <USER_HOME>/docker/data/artifactory/data\r\n    <USER_HOME>/docker/data/artifactory/logs\r\n    <USER_HOME>/docker/data/artifactory/backup\r\n\r\n## Ports\r\nThe service is exposed through port `8081`.\r\n\r\n## Example\r\nTo run artifactory do:\r\n\r\n    docker run -p 18081:8081 amesken/artifactory\r\n\r\nNow point your browser to http://192.168.99.100:18081/artifactory\r\n\r\nAdministration is done by user `admin` with password `password`.\r\n\r\n## URLs\r\nThe artifactory servlet is available at the `artifactory/` path. However a filter redirects all paths outside of `artifactory/` to the artifactory servlet. Thus instead of linking to the URL http://192.168.99.100:18081/artifactory/libs-release-local you can just link to http://192.168.99.100:18081/libs-release-local (i.e. omitting the subpath `artifactory/`).\r\n\r\n## Runtime options\r\nInject the environment variable `RUNTIME_OPTS` when starting a container to set Tomcat's runtime options (i.e. `CATALANA_OPTS`). The most common use case is to set the heap size:\r\n\r\n    docker run -e RUNTIME_OPTS=\"-Xms256m -Xmx512m\" -P amesken/artifactory\r\n\r\n\r\n# Advanced Artifactory\r\n\r\n## Switching to Artifactory Pro\r\nIf you are using Artifactory Pro, the artifactory war archive has to be replaced. The image tagged `-onbuild` is built with an `ONBUILD` trigger for this purpose. Unpack the Artifactory Pro distribution ZIP file and place the file `artifactory.war` (located in the archive) in the same directory as a simple Dockerfile that extends the `onbuild` image:\r\n\r\n    # Dockerfile for Artifactory Pro\r\n    FROM mattgruter/artifactory:latest-onbuild\r\n\r\nNow build your child docker image:\r\n\r\n    docker build -t yourname/myartifactory .\r\n\r\nThe `ONBUILD` trigger ensures your `artifactory.war` is picked up and applied to the image upon build.\r\n\r\n    docker run -P yourname/myartifactory\r\n    \r\n## Context of this image\r\nThis artifactory image is originally created to work with a complete Continuous Delivery tool stack which can be obtained from [docker](https://hub.docker.com/r/amesken/cd-tool-stack/) or [github](https://github.com/amesken/cd-tool-stack).\r\nThe image is based on [this blog article](https://blog.codecentric.de/en/2015/10/continuous-integration-platform-using-docker-container-jenkins-sonarqube-nexus-gitlab) by Marcel Birkner.","google":"UA-70105547-1","note":"Don't delete this file! It's used internally to help with page regeneration."}